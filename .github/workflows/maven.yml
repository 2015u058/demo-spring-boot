#version: 0.2

#phases:
#  install:
#    runtime-versions:
#      java: 17
#    commands:
#      - echo "Installing Maven..."
#      - apt-get -y update
#      - apt-get -y install maven
#  build:
#    commands:
#      - echo "Building with Maven..."
#      - mvn clean verify -DskipTests

# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
        mvn clean verify -DskipTests
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: deploy
      run: |
        scp target/cicd-0.0.1-SNAPSHOT.jar ec2-user@13.126.29.187:/path/to/destination
        ssh ec2-user@13.126.29.187
        java -jar cicd-0.0.1-SNAPSHOT.jar > loyalty.out &
   # - name: Copy files to EC2 instance
   #   uses: appleboy/scp-action@master
   #   with:
    #     host: ${{ secrets.EC2_HOST }} # EC2 instance public DNS/IP
    #     username: ${{ secrets.EC2_USERNAME }} # SSH username
    #     key: ${{ secrets.EC2_SSH_KEY }} # Private SSH key
    #     port: ${{ secrets.PORT }}
    #     source: "." # Source directory to copy
    #     target: "/path/to/destination" # Destination directory on the EC2 instance

    # - name: SSH into EC2 and execute commands
    #   uses: appleboy/ssh-action@master
    #   with:
    #      host: ${{ secrets.EC2_HOST }} # EC2 instance public DNS/IP
    #      username: ${{ secrets.EC2_USERNAME }} # SSH username
    #      key: ${{ secrets.EC2_SSH_KEY }} # Private SSH key
    #      port: ${{ secrets.PORT }}
    #      script: |
    #       # Add commands to restart your application, update configurations, etc.
    #       nohup java -jar cicd-0.0.1-SNAPSHOT.jar &> loyalty.out &

  
